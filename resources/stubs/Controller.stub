<?php

namespace App\Http\Controllers;

use App\{{Model}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class {{Model}}Controller extends Controller {

    public function index(Request $request) {

        /* Concat ',ghost' to $request->mods (?mods=) */
        $request->replace(['mods' => $request->input('mods').',ghost']);

        /* Get all records available in the database.
        Can be filtered with where()
        ex: {{Model}}::where('user_id', Auth::user()->id)->get(); */
        ${{models}} = {{Model}}::all();
        
        /* Loop through records assigning its - show() rendered - views to an array */
        foreach (${{models}} as ${{model}}) {
            $views[] = $this->show($produto, $request);
        }

        return view('{{Model}}.index') // Return new index view
                ->with('{{models}}', ${{models}}) // with the records
                ->with('{{model}}_novo', new {{Model}}()) // a new instance for user insertion
                ->with('views', $views); // the views array
    }

    public function show(Produto $produto, Request $request) {

        $mods = $request->has('mods') ? explode(',', $request->input('mods')) : []; // Gets all request modifiers
        foreach($mods as $modifier){$mods[$modifier] = 1;} // Format to apply them in dinamic view
        
        return view('Produto.show')->with('produto', $produto)->with($mods); // Return view to index() array
    }

    public function store(Request $request, {{Model}} ${{model}}) {
        
        ${{model}}->fill($request->{{model}});
        ${{model}}->save();
        return $this->index();
    }

    public function update(Request $request, {{Model}} ${{model}}) {

        ${{model}}->update($request->{{model}});
        return redirect()->route('{{models}}.index');
    }

    public function destroy({{Model}} ${{model}}) {

        ${{model}}->delete();
        return redirect()->route('{{models}}.index');
    }
}